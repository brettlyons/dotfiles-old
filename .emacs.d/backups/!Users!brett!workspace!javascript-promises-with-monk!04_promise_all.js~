var db = require('monk')('localhost/javascript-promises-examples')

var users = db.get('users')

users.remove({});
Promise.all([users.insert({name: 'Joe'}), users.insert({name: 'Sue'}),
             users.insert({name: 'Tim'}), users.insert({name: 'Kim'})])
  .then(function () {
    users.find({}).then(function (results) {
      console.log("\nSuccess! The records are: \n");
      console.log(results);
      db.close()
    })
  });
// technically, users.remove({}) and users.find({})should be outside of the Promise.all, since there's no guarantee of return or resolve order of the array contents, at least, not without sacrificing concurrency a


 // users.remove({}, function (err) {
 //   users.insert({name: 'Joe'}, function (err, result) {
 //     users.insert({name: 'Sue'}, function (err, result) {
 //       users.insert({name: 'Tim'}, function (err, result) {
 //         users.insert({name: 'Kim'}, function (err, result) {
 //           users.find({}, function (err, results) {
 //             console.log("\nSuccess! The records are: \n");
 //             console.log(results);
 //             db.close()
 //           })
 //         })
 //       })
 //     })
 //   })
 // })
